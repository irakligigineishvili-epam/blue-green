# Application Configuration
conf:
  appName: green
  tier: frontend
  environment: develop
  version: "0.0.1"

# Deployment Settings
replicaCount: 2

strategy:
  type: RollingUpdate
  rollingUpdate:
    maxUnavailable: 1
    maxSurge: 1

# Image configuration for the container
image:
  repository: nginx
  tag: "1.29"
  pullPolicy: IfNotPresent

# Secrets for pulling an image from a private registry
imagePullSecrets: []

# Override chart name
nameOverride: ""
fullnameOverride: ""

# Service Account settings
serviceAccount:
  create: true
  name: "green"
  automount: false
  annotations: {}

# Pod annotations and labels
podAnnotations: {}
podLabels: {}

# Security contexts
podSecurityContext: {}
securityContext: {}

# Liveness probe configuration
livenessProbe:
  httpGet:
    port: 80
  initialDelaySeconds: 5
  periodSeconds: 10

# Readiness probe configuration
readinessProbe:
  httpGet:
    port: 80
  initialDelaySeconds: 5
  periodSeconds: 10

# Resource requests and limits
resources:
  requests:
    memory: "64Mi"
    cpu: "25m"
  limits:
    memory: "128Mi"
    cpu: "50m"

# Kubernetes service configuration
service:
  type: ClusterIP
  port: 80

# Ingress configuration
ingress:
  enabled: true
  className: nginx
  annotations: {}
  hosts:
    - host: ""
      paths:
        - path: /green
          pathType: Prefix
  tls: []

# Node selection constraints
nodeSelector: {}

# Tolerations for taints
tolerations: []

# Affinity rules for pod scheduling
affinity:
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/hostname
              operator: In
              values:
                - minikube-m02

# Topology spread constraints
topologySpreadConstraints:
  - maxSkew: 1
    minDomains: 1
    topologyKey: kubernetes.io/hostname
    whenUnsatisfiable: DoNotSchedule
    labelSelector:
      matchLabels:
        app.kubernetes.io/component: frontend
        app.kubernetes.io/instance: green
        app.kubernetes.io/version: 0.0.1

# Horizontal Pod Autoscaler
autoscaling:
  enabled: true
  minReplicas: 3
  maxReplicas: 7
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 80
  behavior:
    enabled: false
    scaleUp:
      stabilizationWindowSeconds: 30
      selectPolicy: Max
      percentValue: 100
      podValue: 1
      periodSeconds: 15
    scaleDown:
      stabilizationWindowSeconds: 180
      selectPolicy: Max
      percentValue: 50
      podValue: 1
      periodSeconds: 15

# Additional volumes
volumes:
  - name: config-volume
    configMap:
      name: green-config
      items:
        - key: nginx.conf
          path: nginx.conf

# Volume mounts
volumeMounts:
  - name: config-volume
    mountPath: /etc/nginx/conf.d

# ConfigMap settings
configmap:
  create: true
  data:
    nginx.conf: |
      server {
        listen 80;
        server_name localhost;
        location / {
          return 200 "Green!\n";
        }
      }
  binaryData: {}
